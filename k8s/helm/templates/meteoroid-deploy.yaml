apiVersion: apps/v1
kind: Deployment
metadata:
  name: meteoroid
  labels:
    {{- include "fiware.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "fiware.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "fiware.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "fiware.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.meteoroid.image.name }}:{{ .Values.meteoroid.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: meteoroid-port
              containerPort: 3000
              protocol: TCP
          command: ["python", "meteoroid/manage.py", "runserver", "0.0.0.0:3000"]
          env:
            - name: OPEN_WHISK_HOST
              value: "fiware-nginx"
            - name: OPEN_WHISK_APIGATEWAY_PORT
              value: "80"
            - name: OPEN_WHISK_USER
              value: "23bc46b1-71f6-4ed5-8c54-816aa4f8c502"
            - name: OPEN_WHISK_PASSWORD
              value: "123zO3xZCLrMN6v2BKK1dXYFpXlPkccOFqm12CdAsMgRU4VrNZ9lyGVCGuMDGIwP"
            - name: FIWARE_ORION_HOST
              value: "orion:1026"
            - name: DB_HOST
              value: "fiware-mongodb"
          livenessProbe:
            httpGet:
              path: /admin
              port: meteoroid-port
          readinessProbe:
            httpGet:
              path: /admin
              port: meteoroid-port
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
